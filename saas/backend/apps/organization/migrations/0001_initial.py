# -*- coding: utf-8 -*-
"""
TencentBlueKing is pleased to support the open source community by making 蓝鲸智云-权限中心(BlueKing-IAM) available.
Copyright (C) 2017-2021 THL A29 Limited, a Tencent company. All rights reserved.
Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
You may obtain a copy of the License at http://opensource.org/licenses/MIT
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
"""
# Generated by Django 2.2.10 on 2020-04-10 03:20

import django.db.models.deletion
import django.db.models.manager
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [  # type: ignore
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='目录ID')),
                ('type', models.CharField(max_length=32, verbose_name='类型')),
                ('display_name', models.CharField(max_length=64, verbose_name='展示名称')),
                ('domain', models.CharField(db_index=True, max_length=64, unique=True, verbose_name='登陆域')),
                ('default', models.BooleanField(default=False, verbose_name='默认目录')),
                ('order', models.IntegerField(default=0, verbose_name='额外顺序')),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department_id', models.IntegerField(db_index=True, verbose_name='部门ID')),
                ('user_id', models.IntegerField(db_index=True, verbose_name='用户AutoID')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='用户AutoID')),
                ('username', models.CharField(db_index=True, max_length=255, unique=True, verbose_name='用户名')),
                ('display_name', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='全名')),
                ('staff_status', models.CharField(choices=[('IN', '在职'), ('OUT', '离职')], default='IN', max_length=16, verbose_name='在职状态')),
                ('category_id', models.IntegerField(blank=True, null=True, verbose_name='用户目录ID')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='UserLeader',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(db_index=True, verbose_name='用户AutoID')),
                ('leader_id', models.IntegerField(verbose_name='Leader AutoID')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='部门ID')),
                ('name', models.CharField(max_length=255, verbose_name='部门名称')),
                ('category_id', models.IntegerField(blank=True, null=True, verbose_name='目录ID')),
                ('order', models.IntegerField(verbose_name='顺序')),
                ('ancestors', models.TextField(help_text='List[Dict[id,name]]的Json存储', verbose_name='祖先')),
                ('child_count', models.IntegerField(default=0, verbose_name='子部门数量(非递归)')),
                ('member_count', models.IntegerField(default=0, verbose_name='部门下用户数(非递归)')),
                ('recursive_member_count', models.IntegerField(default=0, verbose_name='(递归)部门下用户数')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='organization.Department')),
            ],
            options={
                'verbose_name': '部门表',
                'verbose_name_plural': '部门表',
                'ordering': ['order'],
            },
            managers=[
                ('tree_objects', django.db.models.manager.Manager()),
            ],
        ),
    ]
