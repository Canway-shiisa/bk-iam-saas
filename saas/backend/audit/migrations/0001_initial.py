# -*- coding: utf-8 -*-
"""
TencentBlueKing is pleased to support the open source community by making 蓝鲸智云-权限中心(BlueKing-IAM) available.
Copyright (C) 2017-2021 THL A29 Limited, a Tencent company. All rights reserved.
Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License.
You may obtain a copy of the License at http://opensource.org/licenses/MIT
Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
specific language governing permissions and limitations under the License.
"""
# Generated by Django 2.2.14 on 2021-02-23 12:31

import uuid

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EventForMeta',
            fields=[
                ('creator', models.CharField(max_length=64, verbose_name='创建者')),
                ('updater', models.CharField(max_length=64, verbose_name='更新者')),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('source_type', models.CharField(choices=[('web', 'web'), ('openapi', 'openapi'), ('task', 'task')], max_length=32, verbose_name='事件来源类型')),
                ('source_data_request_id', models.CharField(default='', max_length=32, verbose_name='事件来源请求ID')),
                ('source_data_app_code', models.CharField(default='', max_length=128, verbose_name='事件来源请求app code')),
                ('source_data_task_id', models.CharField(default='', max_length=32, verbose_name='事件来源任务ID')),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('type', models.CharField(choices=[('group.create', 'group.create'), ('group.update', 'group.update'), ('group.delete', 'group.delete'), ('group.member.create', 'group.member.create'), ('group.member.delete', 'group.member.delete'), ('group.member.renew', 'group.member.renew'), ('group.policy.create', 'group.policy.create'), ('group.policy.delete', 'group.policy.delete'), ('group.template.create', 'group.template.create'), ('group.transfer', 'group.transfer'), ('user.policy.create', 'user.policy.create'), ('user.policy.delete', 'user.policy.delete'), ('user.group.delete', 'user.group.delete'), ('user.role.delete', 'user.role.delete'), ('department.group.delete', 'department.group.delete'), ('department.update', 'department.update'), ('template.create', 'template.create'), ('template.update', 'template.update'), ('template.delete', 'template.delete'), ('template.member.create', 'template.member.create'), ('template.member.delete', 'template.member.delete'), ('template.version.update', 'template.version.update'), ('template.version.sync', 'template.version.sync'), ('role.create', 'role.create'), ('role.update', 'role.update'), ('role.member.create', 'role.member.create'), ('role.member.delete', 'role.member.delete'), ('role.member.update', 'role.member.update'), ('role.member.policy.create', 'role.member.policy.create'), ('role.member.policy.delete', 'role.member.policy.delete'), ('role.commonaction.create', 'role.commonaction.create'), ('role.commonaction.delete', 'role.commonaction.delete'), ('role.group.renew', 'role.group.renew'), ('approval.global.update', 'approval.global.update'), ('approval.action.update', 'approval.action.update'), ('approval.group.update', 'approval.group.update'), ('event.rollback', 'event.rollback')], max_length=64, verbose_name='事件类型')),
                ('username', models.CharField(max_length=64, verbose_name='用户名')),
                ('role_type', models.CharField(choices=[('staff', '个人用户'), ('super_manager', '超级管理员'), ('system_manager', '系统管理员'), ('rating_manager', '分级管理员')], default='staff', max_length=32, verbose_name='角色类型')),
                ('role_id', models.IntegerField(default=0, verbose_name='角色ID')),
                ('system_id', models.CharField(default='', max_length=32, verbose_name='系统id')),
                ('object_type', models.CharField(choices=[('group', 'group'), ('user', 'user'), ('department', 'department'), ('template', 'template'), ('role', 'role'), ('task', 'task'), ('event', 'event'), ('commonaction', 'commonaction'), ('action', 'action')], max_length=32, verbose_name='对象类型')),
                ('object_id', models.CharField(max_length=64, verbose_name='对象ID')),
                ('object_name', models.CharField(max_length=128, verbose_name='对象名称')),
                ('_extra', models.TextField(db_column='extra', default='{}', verbose_name='附加数据')),
                ('status', models.IntegerField(choices=[(0, 0), (1, 1), (2, 2), (3, 3)], default=0, verbose_name='事件状态')),
            ],
            options={
                'managed': False,
            },
        ),
    ]
